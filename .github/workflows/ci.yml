name: Build Docker Image

on: push # push 이벤트가 발생하면 workflow가 실행됩니다.
permissions:
  contents: read # 권한을 설정합니다.

jobs:
  ci:
    runs-on: ubuntu-latest

    # set up java
    steps:
      - name: Checkout Repository # 저장소를 체크아웃합니다.
        uses: actions/checkout@v4

      - name: Set up JDK 17 # JDK 17을 설정합니다.
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle # Gradle을 설정합니다.
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Build docker image and push to docker hub # Docker 이미지를 빌드하고 Docker Hub에 푸시합니다.
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
      - name: OCI image volunerability scan # OCI 이미지 취약점 스캔
        uses: anchore/scan-action@v2
        id: scan
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
          fail-build: false
          security-cutoff: high
          acs-report-enable: true
      - name: Upload scan results # 스캔 결과 업로드
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}